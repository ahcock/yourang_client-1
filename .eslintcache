[{"/Users/sangrokpark/Desktop/Codestates/final-project/yourang_client/src/index.tsx":"1","/Users/sangrokpark/Desktop/Codestates/final-project/yourang_client/src/App.tsx":"2","/Users/sangrokpark/Desktop/Codestates/final-project/yourang_client/src/components/Home.tsx":"3","/Users/sangrokpark/Desktop/Codestates/final-project/yourang_client/src/components/BGMusic.tsx":"4","/Users/sangrokpark/Desktop/Codestates/final-project/yourang_client/src/components/SignInModal.tsx":"5","/Users/sangrokpark/Desktop/Codestates/final-project/yourang_client/src/components/SignUpModal.tsx":"6","/Users/sangrokpark/Desktop/Codestates/final-project/yourang_client/src/components/ErrorMessage.tsx":"7","/Users/sangrokpark/Desktop/Codestates/final-project/yourang_client/src/components/Helper/ValidationHelpers.tsx":"8"},{"size":197,"mtime":1610946589782,"results":"9","hashOfConfig":"10"},{"size":178,"mtime":1611036185993,"results":"11","hashOfConfig":"10"},{"size":2674,"mtime":1611246370418,"results":"12","hashOfConfig":"10"},{"size":681,"mtime":1610996200891,"results":"13","hashOfConfig":"10"},{"size":4887,"mtime":1611194770978,"results":"14","hashOfConfig":"10"},{"size":8168,"mtime":1611212465930,"results":"15","hashOfConfig":"10"},{"size":574,"mtime":1611211944930,"results":"16","hashOfConfig":"10"},{"size":211,"mtime":1611210927540,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"5ljsc4",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"20"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"20"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/sangrokpark/Desktop/Codestates/final-project/yourang_client/src/index.tsx",[],["37","38"],"/Users/sangrokpark/Desktop/Codestates/final-project/yourang_client/src/App.tsx",[],"/Users/sangrokpark/Desktop/Codestates/final-project/yourang_client/src/components/Home.tsx",["39"],"/Users/sangrokpark/Desktop/Codestates/final-project/yourang_client/src/components/BGMusic.tsx",["40"],"import React, { useState, useEffect, MouseEvent } from 'react';\nimport './BGMusic.css';\nimport bgMusic from '../music/yourang-home_music.mp3';\n\nfunction BGMusic(url: any) {\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [music] = useState(new Audio(bgMusic));\n\n  useEffect(() => {\n    isPlaying ? music.play() : music.pause();\n  });\n\n  // useEffect(() => {\n  //   setTimeout(() => music.play(), 2000);\n  //   return music.pause();\n  // }, []);\n\n  const toggle = () => {\n    setIsPlaying(!isPlaying);\n  };\n\n  return (\n    <div>\n      <button className=\"home_music-button\" onClick={toggle}>\n        play/pause\n      </button>\n    </div>\n  );\n}\n\nexport default BGMusic;\n","/Users/sangrokpark/Desktop/Codestates/final-project/yourang_client/src/components/SignInModal.tsx",["41","42","43"],"import React, { useState } from 'react';\nimport './SignInModal.css';\nimport googleIcon from '../image/google_icon.png';\nimport naverIcon from '../image/naver_icon.png';\nimport ErrorMessage from './ErrorMessage';\n\ninterface SignInModalProps {\n  signInModalHandler: (e: React.MouseEvent<HTMLElement>) => void;\n  signUpModalHandler: (e: React.MouseEvent<HTMLElement>) => void;\n}\n\nfunction SignInModal({\n  signInModalHandler,\n  signUpModalHandler,\n}: SignInModalProps) {\n  const [loginInfo, setLoginInfo] = useState({ userId: '', password: '' });\n  const [isValidFail, setIsValidFail] = useState(false);\n  const [errorMessage, setErrorMessage] = useState('');\n\n  const loginInfoHandler = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const { name, value } = e.currentTarget;\n    setLoginInfo({ ...loginInfo, [name]: value });\n  };\n\n  const validationCheck = (e: React.MouseEvent<HTMLElement>) => {\n    // 유효성 검사 후 user가 확인 버튼을 눌렀을 때, LoginInfo를 초기화 하기 위한 로직\n    if (e.currentTarget.textContent === '확인') {\n      setLoginInfo({ userId: '', password: '' });\n    }\n\n    const error1 = '아아디와 비밀번호를 모두 입력해 주셔야 합니다.';\n    const error2 = '아이디 혹은 비밀번가 맞지않습니다. 다시 입력해 주세요.';\n    const { userId, password } = loginInfo;\n\n    if (!userId || !password) {\n      setIsValidFail(!isValidFail);\n      setErrorMessage(error1);\n    }\n  };\n\n  return (\n    <div className=\"signin-modal\">\n      <div className=\"signin-modal_container\">\n        <div className=\"signin-modal_container_content\">\n          <div className=\"signin-modal_container_content_head\">\n            <div\n              className=\"signin-modal_container_content_head_close-button\"\n              onClick={signInModalHandler}\n            >\n              +\n            </div>\n            <div className=\"signin-modal_container_content_head_title\">\n              Log in\n            </div>\n            <div className=\"empty-div-for-spacing\"></div>\n          </div>\n\n          <div className=\"signin-modal_container_content_body\">\n            <div className=\"signin-modal_container_content_body_upper\">\n              <div className=\"signin-modal_container_content_body__upper_input-field\">\n                <input\n                  type=\"text\"\n                  name=\"userId\"\n                  className=\"signin-modal_container_content_body__upper_input-field_id\"\n                  placeholder=\"User ID\"\n                  onChange={loginInfoHandler}\n                />\n                <input\n                  type=\"password\"\n                  name=\"password\"\n                  className=\"signin-modal_container_content_body__upper_input-field_password\"\n                  placeholder=\"Password\"\n                  onChange={loginInfoHandler}\n                />\n              </div>\n              <button\n                className=\"signin-modal_container_content_body__upper_login-button\"\n                onClick={validationCheck}\n              >\n                Log In\n              </button>\n            </div>\n\n            <div className=\"signin-modal_container_content_body_lower\">\n              <div className=\"signin-modal_container_content_body_lower_google-login\">\n                <img\n                  src={googleIcon}\n                  className=\"signin-modal_container_content_body_lower_google-login_icon\"\n                />\n                <div className=\"signin-modal_container_content_body_lower_google-login_message\">\n                  Continue with Google\n                </div>\n              </div>\n              <div className=\"signin-modal_container_content_body_lower_naver-login\">\n                <img\n                  src={naverIcon}\n                  className=\"signin-modal_container_content_body_lower_naver-login_icon\"\n                />\n                <div className=\"signin-modal_container_content_body_lower_naver-login_message\">\n                  Continue with Naver\n                </div>\n              </div>\n\n              <div className=\"signin-modal_container_content_body_lower_to-signup-group\">\n                <div className=\"signin-modal_container_content_body_lower_ask-for-signup\">\n                  아직 회원이 아니세요?\n                </div>\n                <button\n                  name=\"toSignUp\"\n                  type=\"button\"\n                  value=\"signup\"\n                  onClick={signUpModalHandler}\n                  className=\"signin-modal_container_content_body_lower_to-signup\"\n                >\n                  Sign up\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      {isValidFail ? (\n        <ErrorMessage\n          validationCheck={validationCheck}\n          errorMessage={errorMessage}\n        />\n      ) : null}\n    </div>\n  );\n}\n\nexport default SignInModal;\n","/Users/sangrokpark/Desktop/Codestates/final-project/yourang_client/src/components/SignUpModal.tsx",["44","45","46","47","48"],"/Users/sangrokpark/Desktop/Codestates/final-project/yourang_client/src/components/ErrorMessage.tsx",[],"/Users/sangrokpark/Desktop/Codestates/final-project/yourang_client/src/components/Helper/ValidationHelpers.tsx",[],{"ruleId":"49","replacedBy":"50"},{"ruleId":"51","replacedBy":"52"},{"ruleId":"53","severity":1,"message":"54","line":1,"column":17,"nodeType":"55","messageId":"56","endLine":1,"endColumn":26},{"ruleId":"53","severity":1,"message":"57","line":1,"column":38,"nodeType":"55","messageId":"56","endLine":1,"endColumn":48},{"ruleId":"53","severity":1,"message":"58","line":32,"column":11,"nodeType":"55","messageId":"56","endLine":32,"endColumn":17},{"ruleId":"59","severity":1,"message":"60","line":86,"column":17,"nodeType":"61","endLine":89,"endColumn":19},{"ruleId":"59","severity":1,"message":"60","line":95,"column":17,"nodeType":"61","endLine":98,"endColumn":19},{"ruleId":"53","severity":1,"message":"62","line":2,"column":10,"nodeType":"55","messageId":"56","endLine":2,"endColumn":21},{"ruleId":"53","severity":1,"message":"63","line":3,"column":8,"nodeType":"55","messageId":"56","endLine":3,"endColumn":13},{"ruleId":"53","severity":1,"message":"58","line":70,"column":11,"nodeType":"55","messageId":"56","endLine":70,"endColumn":17},{"ruleId":"59","severity":1,"message":"60","line":171,"column":17,"nodeType":"61","endLine":174,"endColumn":19},{"ruleId":"59","severity":1,"message":"60","line":180,"column":17,"nodeType":"61","endLine":183,"endColumn":19},"no-native-reassign",["64"],"no-negated-in-lhs",["65"],"@typescript-eslint/no-unused-vars","'ReactNode' is defined but never used.","Identifier","unusedVar","'MouseEvent' is defined but never used.","'error2' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'mobileValid' is defined but never used.","'axios' is defined but never used.","no-global-assign","no-unsafe-negation"]