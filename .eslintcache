[{"/Users/hoon/Desktop/project/yourang_client/src/index.tsx":"1","/Users/hoon/Desktop/project/yourang_client/src/App.tsx":"2","/Users/hoon/Desktop/project/yourang_client/src/container/Home.tsx":"3","/Users/hoon/Desktop/project/yourang_client/src/container/MainContainer.tsx":"4","/Users/hoon/Desktop/project/yourang_client/src/components/BGMusic.tsx":"5","/Users/hoon/Desktop/project/yourang_client/src/components/SignUpModal.tsx":"6","/Users/hoon/Desktop/project/yourang_client/src/components/SignInModal.tsx":"7","/Users/hoon/Desktop/project/yourang_client/src/components/PlanList.tsx":"8","/Users/hoon/Desktop/project/yourang_client/src/components/Modal.tsx":"9","/Users/hoon/Desktop/project/yourang_client/src/components/ContentsBox.tsx":"10","/Users/hoon/Desktop/project/yourang_client/src/components/EditInfo.tsx":"11","/Users/hoon/Desktop/project/yourang_client/src/components/ErrorMessage.tsx":"12","/Users/hoon/Desktop/project/yourang_client/src/components/Main.tsx":"13","/Users/hoon/Desktop/project/yourang_client/src/components/Mypage.tsx":"14","/Users/hoon/Desktop/project/yourang_client/src/components/Navigation.tsx":"15"},{"size":227,"mtime":1611636385591,"results":"16","hashOfConfig":"17"},{"size":511,"mtime":1611636683561,"results":"18","hashOfConfig":"17"},{"size":5000,"mtime":1611638420503,"results":"19","hashOfConfig":"17"},{"size":614,"mtime":1611637543503,"results":"20","hashOfConfig":"17"},{"size":507,"mtime":1611637611500,"results":"21","hashOfConfig":"17"},{"size":8119,"mtime":1611636469740,"results":"22","hashOfConfig":"17"},{"size":4896,"mtime":1611636486222,"results":"23","hashOfConfig":"17"},{"size":1001,"mtime":1611636491935,"results":"24","hashOfConfig":"17"},{"size":473,"mtime":1611636511055,"results":"25","hashOfConfig":"17"},{"size":589,"mtime":1611636539361,"results":"26","hashOfConfig":"17"},{"size":3695,"mtime":1611636699585,"results":"27","hashOfConfig":"17"},{"size":583,"mtime":1611636525670,"results":"28","hashOfConfig":"17"},{"size":4045,"mtime":1611638250071,"results":"29","hashOfConfig":"17"},{"size":4652,"mtime":1611637462971,"results":"30","hashOfConfig":"17"},{"size":1848,"mtime":1611637541503,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"191ny8j",{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"34"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"34"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"34"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"34"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"34"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"34"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"34"},"/Users/hoon/Desktop/project/yourang_client/src/index.tsx",[],["70","71"],"/Users/hoon/Desktop/project/yourang_client/src/App.tsx",[],"/Users/hoon/Desktop/project/yourang_client/src/container/Home.tsx",["72","73"],"/Users/hoon/Desktop/project/yourang_client/src/container/MainContainer.tsx",["74"],"import React, { useState } from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport Mypage from '../components/Mypage';\nimport Main from '../components/Main';\nimport Navigation from '../components/Navigation';\n\nconst MainContainer = () => {\n  const submit = (form: { data: string; foo: string }) => {\n    console.log(form);\n  };\n\n  return (\n    <>\n      <Router>\n        <Navigation submit={submit} />\n        <Route path=\"/main\" exact component={Main} />\n        <Route path=\"/main/profile\" exact component={Mypage} />\n      </Router>\n    </>\n  );\n};\n\nexport default MainContainer;\n","/Users/hoon/Desktop/project/yourang_client/src/components/BGMusic.tsx",[],"/Users/hoon/Desktop/project/yourang_client/src/components/SignUpModal.tsx",["75","76","77","78"],"import React, { useState } from 'react';\nimport axios from 'axios';\n\n//style\nimport '../styles/SignUpModal.scss';\nimport googleIcon from '../image/google_icon.png';\nimport naverIcon from '../image/naver_icon.png';\n\n//components\nimport ErrorMessage from './ErrorMessage';\n\ninterface SignUpModalProps {\n  signInModalHandler: (e: React.MouseEvent<HTMLElement>) => void;\n  signUpModalHandler: (e: React.MouseEvent<HTMLElement>) => void;\n}\n\nfunction SignUpModal({\n  signInModalHandler,\n  signUpModalHandler,\n}: SignUpModalProps) {\n  const [signUpInfo, setSignUpInfo] = useState({\n    userId: '',\n    email: '',\n    mobile: '',\n    password: '',\n    confirmPassword: '',\n  });\n  const [isValidFail, setIsValidFail] = useState(false);\n  const [errorMessage, setErrorMessage] = useState('');\n\n  const signUpInfoHandler = (e: React.ChangeEvent<HTMLInputElement>) => {\n    // input창에 입력한 내용 state로 저장하는 로직\n    const { name, value } = e.currentTarget;\n    setSignUpInfo({ ...signUpInfo, [name]: value });\n  };\n\n  const mobileInputHander = (e: React.KeyboardEvent<HTMLInputElement>) => {\n    // mobile전용 유효성 검사 및 입력제한 로직(출력 예시: 000-0000-0000 숫자로만 입력됨. \"-\"는 자동입력 됨)\n    const { name, value, maxLength } = e.currentTarget;\n    let reg = new RegExp('^[0-9]');\n    if (reg.test(e.key)) {\n      if (value.length === 3 || value.length === 8) {\n        setSignUpInfo({ ...signUpInfo, [name]: value + '-' + e.key });\n      } else {\n        setSignUpInfo({\n          ...signUpInfo,\n          [name]: value.slice(0, maxLength) + e.key,\n        });\n      }\n    }\n\n    if (e.key === 'Backspace' && value.length === 9) {\n      setSignUpInfo({ ...signUpInfo, [name]: value.substring(0, 8) });\n    } else if (e.key === 'Backspace' && value.length === 4) {\n      setSignUpInfo({ ...signUpInfo, [name]: value.substring(0, 3) });\n    } else if (e.key === 'Backspace') {\n      setSignUpInfo({\n        ...signUpInfo,\n        [name]: value.substring(0, value.length - 1),\n      });\n    }\n  };\n\n  const validationCheck = (e: React.MouseEvent<HTMLElement>) => {\n    // Sign-up버튼을 눌렀을 때, signUpInfo를 바탕으로 진행하는 유효성 검사.\n    const { userId, email, mobile, password, confirmPassword } = signUpInfo;\n\n    const error1 = '입력정보를 모두 입력해 주셔야 합니다.';\n    const error2 = '아이디 혹은 비밀번가 맞지않습니다. 다시 입력해 주세요.';\n    const error3 = '비밀번호가 서로 일치하지 않습니다. 다시 입력해 주세요.';\n\n    if (password !== confirmPassword) {\n      setIsValidFail(!isValidFail);\n      setErrorMessage(error3);\n    }\n\n    if (!userId || !email || !mobile || !password || !confirmPassword) {\n      setIsValidFail(!isValidFail);\n      setErrorMessage(error1);\n    }\n\n    //유효성 검사에 문제가 없고, 모든 정보가 입력이 됐을 때, 서버에 사인업 요청하는 로직을 보내야 함.\n  };\n\n  // 아이디 중복체크 함수 만들어야 함\n  // 이메일 중복체크 함수 만들어야 함\n\n  return (\n    <div className=\"signup-modal\">\n      <div className=\"signup-modal_container\">\n        <div className=\"signup-modal_container_content\">\n          <div className=\"signup-modal_container_content_head\">\n            <div\n              className=\"signup-modal_container_content_head_close-button\"\n              onClick={signUpModalHandler}\n            >\n              +\n            </div>\n            <div className=\"signup-modal_container_content_head_title\">\n              Sign up\n            </div>\n            <div className=\"empty-div-for-spacing\"></div>\n          </div>\n\n          <div className=\"signup-modal_container_content_body\">\n            <div className=\"signup-modal_container_content_body_upper\">\n              <div className=\"signup-modal_container_content_body__upper_input-field\">\n                <div className=\"signup-modal_container_content_body__upper_input-field_id-group\">\n                  <input\n                    type=\"text\"\n                    name=\"userId\"\n                    className=\"signup-modal_container_content_body__upper_input-field_id\"\n                    placeholder=\"User ID\"\n                    onChange={signUpInfoHandler}\n                  />\n                  <button className=\"signup-modal_container_content_body__upper_input-field_id_confirm\">\n                    중복체크\n                  </button>\n                </div>\n\n                <div className=\"signup-modal_container_content_body__upper_input-field_email-group\">\n                  <input\n                    type=\"email\"\n                    name=\"email\"\n                    className=\"signup-modal_container_content_body__upper_input-field_email\"\n                    placeholder=\"Email\"\n                    onChange={signUpInfoHandler}\n                  />\n                  <button className=\"signup-modal_container_content_body__upper_input-field_email_confirm\">\n                    중복체크\n                  </button>\n                </div>\n\n                <input\n                  type=\"tel\"\n                  name=\"mobile\"\n                  className=\"signup-modal_container_content_body__upper_input-field_mobile\"\n                  placeholder=\"Mobile\"\n                  value={signUpInfo.mobile}\n                  // onChange={signUpInfoHandler}\n                  onKeyDown={mobileInputHander}\n                  maxLength={12}\n                />\n\n                <input\n                  type=\"password\"\n                  name=\"password\"\n                  className=\"signup-modal_container_content_body__upper_input-field_password\"\n                  placeholder=\"Password\"\n                  onChange={signUpInfoHandler}\n                />\n                <input\n                  type=\"password\"\n                  name=\"confirmPassword\"\n                  className=\"signup-modal_container_content_body__upper_input-field_password-confirm\"\n                  placeholder=\"Confirm password\"\n                  onChange={signUpInfoHandler}\n                />\n              </div>\n              <button\n                className=\"signup-modal_container_content_body__upper_login-button\"\n                onClick={validationCheck}\n              >\n                Sign up\n              </button>\n            </div>\n\n            <div className=\"signup-modal_container_content_body_lower\">\n              <div className=\"signup-modal_container_content_body_lower_google-login\">\n                <img\n                  src={googleIcon}\n                  className=\"signup-modal_container_content_body_lower_google-login_icon\"\n                />\n                <div className=\"signup-modal_container_content_body_lower_google-login_message\">\n                  Continue with Google\n                </div>\n              </div>\n              <div className=\"signup-modal_container_content_body_lower_naver-login\">\n                <img\n                  src={naverIcon}\n                  className=\"signup-modal_container_content_body_lower_naver-login_icon\"\n                />\n                <div className=\"signup-modal_container_content_body_lower_naver-login_message\">\n                  Continue with Naver\n                </div>\n              </div>\n\n              <div className=\"signup-modal_container_content_body_lower_to-login-group\">\n                <div className=\"signup-modal_container_content_body_lower_ask-for-login\">\n                  이미 회원이시라구요?\n                </div>\n                <button\n                  name=\"toSignIn\"\n                  type=\"button\"\n                  value=\"signin\"\n                  onClick={signInModalHandler}\n                  className=\"signup-modal_container_content_body_lower_to-login\"\n                >\n                  Log in\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      {isValidFail ? (\n        <ErrorMessage\n          validationCheck={validationCheck}\n          errorMessage={errorMessage}\n        />\n      ) : null}\n    </div>\n  );\n}\n\nexport default SignUpModal;\n","/Users/hoon/Desktop/project/yourang_client/src/components/SignInModal.tsx",["79","80","81"],"import React, { useState } from 'react';\nimport '../styles/SignInModal.scss';\nimport googleIcon from '../image/google_icon.png';\nimport naverIcon from '../image/naver_icon.png';\nimport ErrorMessage from './ErrorMessage';\n\ninterface SignInModalProps {\n  signInModalHandler: (e: React.MouseEvent<HTMLElement>) => void;\n  signUpModalHandler: (e: React.MouseEvent<HTMLElement>) => void;\n}\n\nfunction SignInModal({\n  signInModalHandler,\n  signUpModalHandler,\n}: SignInModalProps) {\n  const [loginInfo, setLoginInfo] = useState({ userId: '', password: '' });\n  const [isValidFail, setIsValidFail] = useState(false);\n  const [errorMessage, setErrorMessage] = useState('');\n\n  const loginInfoHandler = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const { name, value } = e.currentTarget;\n    setLoginInfo({ ...loginInfo, [name]: value });\n  };\n\n  const validationCheck = (e: React.MouseEvent<HTMLElement>) => {\n    // 유효성 검사 후 user가 확인 버튼을 눌렀을 때, LoginInfo를 초기화 하기 위한 로직\n    if (e.currentTarget.textContent === '확인') {\n      setLoginInfo({ userId: '', password: '' });\n    }\n\n    const error1 = '아아디와 비밀번호를 모두 입력해 주셔야 합니다.';\n    const error2 = '아이디 혹은 비밀번가 맞지않습니다. 다시 입력해 주세요.';\n    const { userId, password } = loginInfo;\n\n    if (!userId || !password) {\n      setIsValidFail(!isValidFail);\n      setErrorMessage(error1);\n    }\n  };\n\n  return (\n    <div className=\"signin-modal\">\n      <div className=\"signin-modal_container\">\n        <div className=\"signin-modal_container_content\">\n          <div className=\"signin-modal_container_content_head\">\n            <div\n              className=\"signin-modal_container_content_head_close-button\"\n              onClick={signInModalHandler}\n            >\n              +\n            </div>\n            <div className=\"signin-modal_container_content_head_title\">\n              Log in\n            </div>\n            <div className=\"empty-div-for-spacing\"></div>\n          </div>\n\n          <div className=\"signin-modal_container_content_body\">\n            <div className=\"signin-modal_container_content_body_upper\">\n              <div className=\"signin-modal_container_content_body__upper_input-field\">\n                <input\n                  type=\"text\"\n                  name=\"userId\"\n                  className=\"signin-modal_container_content_body__upper_input-field_id\"\n                  placeholder=\"User ID\"\n                  onChange={loginInfoHandler}\n                />\n                <input\n                  type=\"password\"\n                  name=\"password\"\n                  className=\"signin-modal_container_content_body__upper_input-field_password\"\n                  placeholder=\"Password\"\n                  onChange={loginInfoHandler}\n                />\n              </div>\n              <button\n                className=\"signin-modal_container_content_body__upper_login-button\"\n                onClick={validationCheck}\n              >\n                Log In\n              </button>\n            </div>\n\n            <div className=\"signin-modal_container_content_body_lower\">\n              <div className=\"signin-modal_container_content_body_lower_google-login\">\n                <img\n                  src={googleIcon}\n                  className=\"signin-modal_container_content_body_lower_google-login_icon\"\n                />\n                <div className=\"signin-modal_container_content_body_lower_google-login_message\">\n                  Continue with Google\n                </div>\n              </div>\n              <div className=\"signin-modal_container_content_body_lower_naver-login\">\n                <img\n                  src={naverIcon}\n                  className=\"signin-modal_container_content_body_lower_naver-login_icon\"\n                />\n                <div className=\"signin-modal_container_content_body_lower_naver-login_message\">\n                  Continue with Naver\n                </div>\n              </div>\n\n              <div className=\"signin-modal_container_content_body_lower_to-signup-group\">\n                <div className=\"signin-modal_container_content_body_lower_ask-for-signup\">\n                  아직 회원이 아니세요?\n                </div>\n                <button\n                  name=\"toSignUp\"\n                  type=\"button\"\n                  value=\"signup\"\n                  onClick={signUpModalHandler}\n                  className=\"signin-modal_container_content_body_lower_to-signup\"\n                >\n                  Sign up\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      {isValidFail ? (\n        <ErrorMessage\n          validationCheck={validationCheck}\n          errorMessage={errorMessage}\n        />\n      ) : null}\n    </div>\n  );\n}\n\nexport default SignInModal;\n","/Users/hoon/Desktop/project/yourang_client/src/components/PlanList.tsx",[],"/Users/hoon/Desktop/project/yourang_client/src/components/Modal.tsx",[],"/Users/hoon/Desktop/project/yourang_client/src/components/ContentsBox.tsx",[],"/Users/hoon/Desktop/project/yourang_client/src/components/EditInfo.tsx",["82"],"import React, { useState } from 'react';\nimport '../styles/EditInfo.scss';\n\ntype EditInfoProp = {\n  editOnModal: (e: any) => void;\n  userinfo: {\n    name: string;\n    userid: string;\n    email: string;\n    phone: string;\n    created: string;\n  };\n};\n\nfunction EditInfo({ editOnModal, userinfo }: EditInfoProp) {\n  const [inputForm, setInputForm] = useState({\n    editEmail: '',\n    password: '',\n    inspect: '',\n    editPhone: '',\n  });\n\n  const { editEmail, password, inspect, editPhone } = inputForm;\n  const { email, phone } = userinfo;\n\n  const onChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const { name, value } = e.target;\n    console.log(e.target);\n    setInputForm({\n      ...inputForm,\n      [name]: value,\n    });\n  };\n\n  const mobileInputHander = (e: React.KeyboardEvent<HTMLInputElement>) => {\n    // mobile전용 유효성 검사 및 입력제한 로직(출력 예시: 000-0000-0000 숫자로만 입력됨. \"-\"는 자동입력 됨)\n    const { name, value, maxLength } = e.currentTarget;\n    let reg = new RegExp('^[0-9]');\n    if (reg.test(e.key)) {\n      if (value.length === 3 || value.length === 8) {\n        setInputForm({ ...inputForm, [name]: value + '-' + e.key });\n      } else {\n        setInputForm({\n          ...inputForm,\n          [name]: value.slice(0, maxLength) + e.key,\n        });\n      }\n    }\n\n    if (e.key === 'Backspace' && value.length === 9) {\n      setInputForm({ ...inputForm, [name]: value.substring(0, 8) });\n    } else if (e.key === 'Backspace' && value.length === 4) {\n      setInputForm({ ...inputForm, [name]: value.substring(0, 3) });\n    } else if (e.key === 'Backspace') {\n      setInputForm({\n        ...inputForm,\n        [name]: value.substring(0, value.length - 1),\n      });\n    }\n    console.log(e.key);\n  };\n\n  return (\n    <div className=\"editinfo\">\n      <div className=\"editinfo_modal\">\n        <div className=\"editinfo_modal_name\">youRang</div>\n        <div className=\"editinfo_modal_form\">\n          <div className=\"editinfo_modal_Email\">\n            <div className=\"editinfo_modal_Email_title\">Email</div>\n            <input\n              className=\"editinfo_modal_Email_value\"\n              name=\"editEmail\"\n              onChange={onChange}\n              defaultValue={editEmail ? editEmail : email}\n            />\n          </div>\n          <div className=\"editinfo_modal_phone\">\n            <div className=\"editinfo_modal_phone_title\">Phone</div>\n            <input\n              type=\"text\"\n              className=\"editinfo_modal_phone_value\"\n              name=\"editPhone\"\n              value={editPhone}\n              onKeyDown={mobileInputHander}\n              maxLength={12}\n            />\n          </div>\n          <div className=\"editinfo_modal_password\">\n            <div className=\"editinfo_modal_password_title\">Password</div>\n            <input\n              type=\"password\"\n              className=\"editinfo_modal_password_value1\"\n              name=\"password\"\n              value={password}\n              onChange={onChange}\n            />\n            <input\n              className=\"editinfo_modal_password_value2\"\n              type=\"password\"\n              name=\"inspect\"\n              value={inspect}\n              onChange={onChange}\n            />\n            {password !== inspect ? (\n              <div className=\"editinfo_modal_password_inspect\">\n                작성된 비밀번호가 서로 다릅니다\n              </div>\n            ) : (\n              ''\n            )}\n          </div>\n\n          <button className=\"editinfo_modal_btn\" onClick={editOnModal}>\n            작성완료\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default EditInfo;\n","/Users/hoon/Desktop/project/yourang_client/src/components/ErrorMessage.tsx",[],"/Users/hoon/Desktop/project/yourang_client/src/components/Main.tsx",["83","84","85","86","87","88","89","90","91"],"import React, { cloneElement, useEffect, useState } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport '../styles/Main.scss';\nimport classNames from 'classnames';\nimport ContentsBox from './ContentsBox';\nimport Modal from './Modal';\nimport axios from 'axios';\nimport { GoogleMap, Marker } from 'react-google-maps';\nimport { fireEvent } from '@testing-library/react';\n//https://yourang-server.link:5000\ndeclare global {\n  interface Window {\n    google: any;\n  }\n}\ninterface menuState {\n  restaurant: boolean;\n  place: boolean;\n  hotel: boolean;\n}\nfunction Main() {\n  let map: google.maps.Map;\n\n  const [menuState, setMenuState] = useState<menuState>({\n    restaurant: false,\n    place: true,\n    hotel: false,\n  });\n\n  const location = useLocation<any>();\n  const apiKey = process.env.REACT_APP_GOOGLE_MAP_API;\n\n  //Home 콤포넨트에서 입력된 장소 이름이 현재 콤포넌트로 잘 넘어오는지 테스트 하기 위함\n  console.log(location.state);\n  const [modalState, setModalState] = useState({\n    isOn: false,\n  });\n  const [placeInput, setPlaceInput] = useState('');\n  const [placeInfo, setPlaceInfo] = useState<any>([]);\n\n  let latLng: any;\n  // google map\n\n  const renderMap = () => {\n    //지도 만들고 마커 찍는 로직\n    let myLatlng = new google.maps.LatLng(latLng.lat, latLng.lng);\n    // latLng;\n    let mapOptions = {\n      center: myLatlng,\n      zoom: 15,\n      // mapTypeId: 'satellite',\n    };\n    const map = new window.google.maps.Map(\n      document.getElementById('map') as HTMLElement,\n      mapOptions\n    );\n    axios.post('https://localhost:5001/google/map', {\n      data: latLng,\n      withCredentials: true,\n    });\n\n    placeInfo.forEach((location: any) => {\n      console.log('걱정마 이건 과금 아니야', location);\n      const marker = new window.google.maps.Marker({\n        position: location.geometry.location,\n        title: location.geometry.name,\n        visible: true,\n      });\n      marker.setMap(map);\n    });\n  };\n\n  useEffect(() => {\n    latLng = location.state.latLng;\n    setPlaceInfo(location.state.places);\n    renderMap();\n  }, []);\n\n  // leftContainer MenuTap State\n  const onClick = (e: string) => {\n    setMenuState({\n      ...menuState,\n      restaurant: false,\n      place: false,\n      hotel: false,\n      [e]: true,\n    });\n  };\n\n  // 컨텐츠 상세 모달 on\n  const onModalState = () => {\n    setModalState({\n      ...modalState,\n      isOn: true,\n    });\n  };\n  // 컨텐츠 상세 모달 off\n  const closeModalState = () => {\n    setModalState({\n      ...modalState,\n      isOn: false,\n    });\n  };\n  return (\n    <div id=\"mainContainer\">\n      <div id=\"leftContainer\">\n        <ul id=\"leftMenu\">\n          <li\n            onClick={() => onClick('restaurant')}\n            value=\"restaurant\"\n            className={classNames({ restaurant: menuState.restaurant })}\n          >\n            맛집\n          </li>\n          <li\n            onClick={() => onClick('place')}\n            value=\"place\"\n            className={classNames({ place: menuState.place })}\n          >\n            명소\n          </li>\n          <li\n            onClick={() => onClick('hotel')}\n            value=\"hotel\"\n            className={classNames({ hotel: menuState.hotel })}\n          >\n            숙박\n          </li>\n        </ul>\n        <div id=\"leftContents\">\n          {menuState.place || menuState.restaurant || menuState.hotel\n            ? placeInfo.map((content: any) => (\n                <ContentsBox\n                  // key={content.place_id}\n                  imgSrc={content.photo_url}\n                  title={content.name}\n                  desc={content.rating}\n                  onModalState={onModalState}\n                />\n              ))\n            : ''}\n        </div>\n      </div>\n      <div id=\"rightContainer\">\n        {modalState.isOn ? <Modal closeModalState={closeModalState} /> : ''}\n        <div id=\"map\" className={classNames({ onShow: modalState.isOn })}></div>\n      </div>\n    </div>\n  );\n}\nexport default Main;\n","/Users/hoon/Desktop/project/yourang_client/src/components/Mypage.tsx",["92"],"import React, { useState } from 'react';\nimport '../styles/Mypage.scss';\nimport PlanList from './PlanList';\nimport EditInfo from './EditInfo';\nimport Photo from '../image/photo.png';\n\nfunction Mypage() {\n  // fake data - user info\n  const [userinfo, setUserinfo] = useState({\n    name: '홍길동',\n    userid: 'userId',\n    email: 'userId@gmail.com',\n    phone: '010-1234-5678',\n    created: '20.11.12',\n  });\n\n  // fake data - plan list\n  const [planList, setPlanList] = useState([\n    {\n      id: 0,\n      planName: '부산 여행',\n      inst: '부산은 역시 돼지국밥',\n      created: '20.11.12',\n    },\n    {\n      id: 1,\n      planName: '서울 여행',\n      inst: '서울은 역시 강남',\n      created: '20.11.12',\n    },\n    {\n      id: 2,\n      planName: '강원도 여행',\n      inst: '서울은 역시 감자',\n      created: '20.11.12',\n    },\n    {\n      id: 3,\n      planName: '제주도 여행',\n      inst: '제주도은 역시 한라봉',\n      created: '20.11.12',\n    },\n    {\n      id: 4,\n      planName: '경주',\n      inst: '경주은 역시 불국사',\n      created: '20.11.12',\n    },\n    {\n      id: 5,\n      planName: '전주',\n      inst: '전주은 역시 비빔밥',\n      created: '20.11.12',\n    },\n    {\n      id: 6,\n      planName: '전주',\n      inst: '전주은 역시 비빔밥',\n      created: '20.11.12',\n    },\n    {\n      id: 7,\n      planName: '전주',\n      inst: '전주은 역시 비빔밥',\n      created: '20.11.12',\n    },\n    {\n      id: 8,\n      planName: '전주',\n      inst: '전주은 역시 비빔밥',\n      created: '20.11.12',\n    },\n    {\n      id: 9,\n      planName: '전주',\n      inst: '전주은 역시 비빔밥',\n      created: '20.11.12',\n    },\n    {\n      id: 10,\n      planName: '전주',\n      inst: '전주은 역시 비빔밥',\n      created: '20.11.12',\n    },\n    {\n      id: 11,\n      planName: '전주',\n      inst: '전주은 역시 비빔밥',\n      created: '20.11.12',\n    },\n    {\n      id: 12,\n      planName: '전주',\n      inst: '전주은 역시 비빔밥',\n      created: '20.11.12',\n    },\n    {\n      id: 13,\n      planName: '전주',\n      inst: '전주은 역시 비빔밥',\n      created: '20.11.12',\n    },\n    {\n      id: 14,\n      planName: '전주',\n      inst: '전주은 역시 비빔밥',\n      created: '20.11.12',\n    },\n    {\n      id: 15,\n      planName: '전주',\n      inst: '전주은 역시 비빔밥',\n      created: '20.11.12',\n    },\n    {\n      id: 16,\n      planName: '전주',\n      inst: '전주은 역시 비빔밥',\n      created: '20.11.12',\n    },\n  ]);\n\n  // fake data - user info contents\n  const { name, userid, email, phone } = userinfo;\n\n  // useState\n  const [onModal, setOnModal] = useState(false);\n\n  // plan list element delete\n  const onRemove = (id: number): void => {\n    setPlanList(planList.filter((el) => el.id !== id));\n  };\n\n  // user info modification pop\n  const editOnModal = (e: any) => {\n    setOnModal(!onModal);\n  };\n\n  return (\n    <div id=\"mypage\">\n      {onModal && <EditInfo editOnModal={editOnModal} userinfo={userinfo} />}\n      <div id=\"profileLeft\">\n        <div id=\"profileLeft_profile\">\n          <img id=\"profileLeft_profile_photo\" src={Photo} alt=\"\" />\n          <h1 id=\"profileLeft_profile_name\">{name}</h1>\n          <button id=\"profileLeft_profile_editBtn\" onClick={editOnModal}>\n            EDIT\n          </button>\n        </div>\n        <div id=\"profileLeft_myInfo\">\n          <div id=\"profileLeft_myInfo_titleBar\">User info</div>\n          <div id=\"profileLeft_myInfo_detail\">\n            <div id=\"profileLeft_myInfo_detail_userId\">\n              <div id=\"detail_title\">아이디</div>\n              <div>{userid}</div>\n            </div>\n            <div id=\"profileLeft_myInfo_detail_email\">\n              <div id=\"detail_email\">이메일</div>\n              <div>{email}</div>\n            </div>\n            <div id=\"profileLeft_myInfo_detail_phone\">\n              <div id=\"detail_phone\">전화번호</div>\n              <div>{phone}</div>\n            </div>\n            <div id=\"profileLeft_myInfo_detail_plans\">\n              <div id=\"detail_plan\">내 여행</div>\n              <div>{planList.length}</div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div id=\"profileRight\">\n        <div id=\"profileRight_contents\">\n          <div id=\"profileRight_contents_titleBar\">Plan List</div>\n          <div id=\"profileRight_contents_planList\">\n            {planList.map((el) => (\n              <PlanList key={el.id} user={el} onRemove={onRemove} />\n            ))}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Mypage;\n","/Users/hoon/Desktop/project/yourang_client/src/components/Navigation.tsx",["93"],"import React, { ChangeEvent, FormEvent, useState } from 'react';\nimport '../styles/Navigation.scss';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\n\nconst apiKey = process.env.REACT_APP_GOOGLE_MAP_API;\n\ninterface NavigationProps {\n  submit: (form: { data: string; foo: string }) => void;\n}\nfunction Navigation({ submit }: NavigationProps) {\n  const [value, setValue] = useState({\n    data: '',\n    foo: '',\n  });\n\n  const onChange = (e: ChangeEvent<HTMLInputElement>) => {\n    setValue({\n      ...value,\n      data: e.target.value,\n    });\n  };\n\n  const handleSubmit = (e: FormEvent<HTMLFormElement>) => {\n    let data;\n    e.preventDefault();\n    submit(value);\n    async function foo() {\n      data = axios\n        .get(\n          `https://maps.googleapis.com/maps/api/place/findplacefromtext/json?input=Museum%20of%20Contemporary%20Art%20Australia&inputtype=textquery&fields=photos,formatted_address,name,rating,opening_hours,geometry&key=${apiKey}`\n          // `https://maps.googleapis.com/maps/api/geocode/json?address=${value.data}&key=${apiKey}`\n        )\n        .then(console.log);\n    }\n    foo();\n  };\n\n  return (\n    <header>\n      <div id=\"logo\">\n        <Link to=\"/main\">YouRang</Link>\n      </div>\n      <div id=\"navSearch\">\n        <form onSubmit={handleSubmit}>\n          <input\n            onChange={onChange}\n            value={value.data}\n            type=\"text\"\n            placeholder=\"지역, 숙소명을 입력하세요\"\n            autoComplete=\"off\"\n          />\n        </form>\n      </div>\n      <div id=\"navMenus\">\n        <div id=\"navProfile\">\n          <Link to=\"/main\">Home</Link>\n        </div>\n        <div id=\"navProfile\">Help</div>\n        <div id=\"navProfile\">\n          <Link to=\"/main/profile\">Profile</Link>\n        </div>\n      </div>\n    </header>\n  );\n}\n\nexport default Navigation;\n",{"ruleId":"94","replacedBy":"95"},{"ruleId":"96","replacedBy":"97"},{"ruleId":"98","severity":1,"message":"99","line":10,"column":15,"nodeType":"100","messageId":"101","endLine":10,"endColumn":26},{"ruleId":"98","severity":1,"message":"102","line":12,"column":5,"nodeType":"100","messageId":"101","endLine":12,"endColumn":25},{"ruleId":"98","severity":1,"message":"103","line":1,"column":17,"nodeType":"100","messageId":"101","endLine":1,"endColumn":25},{"ruleId":"98","severity":1,"message":"104","line":2,"column":8,"nodeType":"100","messageId":"101","endLine":2,"endColumn":13},{"ruleId":"98","severity":1,"message":"105","line":69,"column":11,"nodeType":"100","messageId":"101","endLine":69,"endColumn":17},{"ruleId":"106","severity":1,"message":"107","line":170,"column":17,"nodeType":"108","endLine":173,"endColumn":19},{"ruleId":"106","severity":1,"message":"107","line":179,"column":17,"nodeType":"108","endLine":182,"endColumn":19},{"ruleId":"98","severity":1,"message":"105","line":32,"column":11,"nodeType":"100","messageId":"101","endLine":32,"endColumn":17},{"ruleId":"106","severity":1,"message":"107","line":86,"column":17,"nodeType":"108","endLine":89,"endColumn":19},{"ruleId":"106","severity":1,"message":"107","line":95,"column":17,"nodeType":"108","endLine":98,"endColumn":19},{"ruleId":"98","severity":1,"message":"109","line":24,"column":18,"nodeType":"100","messageId":"101","endLine":24,"endColumn":23},{"ruleId":"98","severity":1,"message":"110","line":1,"column":17,"nodeType":"100","messageId":"101","endLine":1,"endColumn":29},{"ruleId":"98","severity":1,"message":"111","line":8,"column":10,"nodeType":"100","messageId":"101","endLine":8,"endColumn":19},{"ruleId":"98","severity":1,"message":"112","line":8,"column":21,"nodeType":"100","messageId":"101","endLine":8,"endColumn":27},{"ruleId":"98","severity":1,"message":"113","line":9,"column":10,"nodeType":"100","messageId":"101","endLine":9,"endColumn":19},{"ruleId":"98","severity":1,"message":"102","line":22,"column":7,"nodeType":"100","messageId":"101","endLine":22,"endColumn":27},{"ruleId":"98","severity":1,"message":"114","line":31,"column":9,"nodeType":"100","messageId":"101","endLine":31,"endColumn":15},{"ruleId":"98","severity":1,"message":"115","line":38,"column":10,"nodeType":"100","messageId":"101","endLine":38,"endColumn":20},{"ruleId":"98","severity":1,"message":"116","line":38,"column":22,"nodeType":"100","messageId":"101","endLine":38,"endColumn":35},{"ruleId":"117","severity":1,"message":"118","line":74,"column":14,"nodeType":"119","endLine":74,"endColumn":35},{"ruleId":"98","severity":1,"message":"120","line":9,"column":20,"nodeType":"100","messageId":"101","endLine":9,"endColumn":31},{"ruleId":"98","severity":1,"message":"121","line":29,"column":7,"nodeType":"100","messageId":"101","endLine":29,"endColumn":11},"no-native-reassign",["122"],"no-negated-in-lhs",["123"],"@typescript-eslint/no-unused-vars","'google' is defined but never used.","Identifier","unusedVar","'map' is defined but never used.","'useState' is defined but never used.","'axios' is defined but never used.","'error2' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'phone' is assigned a value but never used.","'cloneElement' is defined but never used.","'GoogleMap' is defined but never used.","'Marker' is defined but never used.","'fireEvent' is defined but never used.","'apiKey' is assigned a value but never used.","'placeInput' is assigned a value but never used.","'setPlaceInput' is assigned a value but never used.","react-hooks/exhaustive-deps","Assignments to the 'latLng' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","MemberExpression","'setUserinfo' is assigned a value but never used.","'data' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]