[{"/Users/hoon/Desktop/yourang_client/src/index.tsx":"1","/Users/hoon/Desktop/yourang_client/src/App.tsx":"2","/Users/hoon/Desktop/yourang_client/src/container/MainContainer.tsx":"3","/Users/hoon/Desktop/yourang_client/src/container/Home.tsx":"4","/Users/hoon/Desktop/yourang_client/src/container/Mypage.tsx":"5","/Users/hoon/Desktop/yourang_client/src/container/Navigation.tsx":"6","/Users/hoon/Desktop/yourang_client/src/container/Main.tsx":"7","/Users/hoon/Desktop/yourang_client/src/components/BGMusic.tsx":"8","/Users/hoon/Desktop/yourang_client/src/components/SignUpModal.tsx":"9","/Users/hoon/Desktop/yourang_client/src/components/SignInModal.tsx":"10","/Users/hoon/Desktop/yourang_client/src/components/PlanList.tsx":"11","/Users/hoon/Desktop/yourang_client/src/components/EditInfo.tsx":"12","/Users/hoon/Desktop/yourang_client/src/components/ContentsBox.tsx":"13","/Users/hoon/Desktop/yourang_client/src/components/Modal.tsx":"14","/Users/hoon/Desktop/yourang_client/src/components/ErrorMessage.tsx":"15"},{"size":220,"mtime":1611293578135,"results":"16","hashOfConfig":"17"},{"size":712,"mtime":1611407777027,"results":"18","hashOfConfig":"17"},{"size":734,"mtime":1611408071317,"results":"19","hashOfConfig":"17"},{"size":5244,"mtime":1611407640908,"results":"20","hashOfConfig":"17"},{"size":6608,"mtime":1611407777033,"results":"21","hashOfConfig":"17"},{"size":1852,"mtime":1611408047138,"results":"22","hashOfConfig":"17"},{"size":4091,"mtime":1611408443001,"results":"23","hashOfConfig":"17"},{"size":938,"mtime":1611298979999,"results":"24","hashOfConfig":"17"},{"size":8110,"mtime":1611407777031,"results":"25","hashOfConfig":"17"},{"size":4887,"mtime":1611298829407,"results":"26","hashOfConfig":"17"},{"size":1051,"mtime":1611407777031,"results":"27","hashOfConfig":"17"},{"size":3697,"mtime":1611407777030,"results":"28","hashOfConfig":"17"},{"size":530,"mtime":1611278239968,"results":"29","hashOfConfig":"17"},{"size":465,"mtime":1611278239969,"results":"30","hashOfConfig":"17"},{"size":574,"mtime":1611297190976,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"8wf5pw",{"filePath":"35","messages":"36","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"34"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"34"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"34"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"34"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"34"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"34"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"34"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"34"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"34"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"34"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},"/Users/hoon/Desktop/yourang_client/src/index.tsx",[],["74","75"],"/Users/hoon/Desktop/yourang_client/src/App.tsx",["76","77","78","79","80"],"import React, { useState } from \"react\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Redirect,\n} from \"react-router-dom\";\nimport Home from \"./container/Home\";\nimport Navigation from \"./container/Navigation\";\nimport Main from \"./container/Main\";\nimport Mypage from \"./container/Mypage\";\nimport NoMatch from \"./container/NoMatch\";\nimport MainContainer from \"./container/MainContainer\";\n\n// 테스트다\n\nfunction App() {\n  return (\n    <>\n      <Router>\n        <Switch>\n          <Route path=\"/\" exact component={Home} />\n          <Route path=\"/main\" exact component={MainContainer} />\n          <Redirect path=\"*\" to=\"/main\" />\n        </Switch>\n      </Router>\n    </>\n  );\n}\n\nexport default App;\n","/Users/hoon/Desktop/yourang_client/src/container/MainContainer.tsx",["81","82"],"import React, { useState } from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport Mypage from './Mypage';\nimport Main from './Main';\nimport Navigation from './Navigation';\n\nconst MainContainer = () => {\n  const [data, setData] = useState({\n    data: 'okok',\n  });\n\n  const submit = (form: { data: string; foo: string }) => {\n    console.log(form);\n  };\n\n  return (\n    <>\n      <Router>\n        <Navigation submit={submit} />\n        <Route path=\"/main\" exact component={Main} />\n        <Route path=\"/main/profile\" exact component={Mypage} />\n        <Route path=\"/main\" exact component={Main} />\n      </Router>\n      {/* <Main />\n      <Mypage /> */}\n    </>\n  );\n};\n\nexport default MainContainer;\n","/Users/hoon/Desktop/yourang_client/src/container/Home.tsx",["83","84","85"],"import React, { ReactNode, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport axios from 'axios';\nimport BGMusic from '../components/BGMusic';\nimport SignInModal from '../components/SignInModal';\nimport SignUpModal from '../components/SignUpModal';\nimport './Home.css';\n\n//Video\nimport backgroundVideo from '../video/yourang-home_video.mp4';\nimport { findDOMNode } from 'react-dom';\n// import { GoogleMap } from 'react-google-maps';\n\ndeclare const google: any;\nlet map: google.maps.Map;\n\nfunction Home() {\n  const [isSignInOpen, setIsSignInOpen] = useState(false);\n  const [isSignUpOpen, setIsSignUpOpen] = useState(false);\n  const [placeInput, setPlaceInput] = useState('');\n  const history = useHistory();\n  const apiKey = process.env.REACT_APP_GOOGLE_MAP_API;\n\n  const onChangeHandler = (e: React.FormEvent<HTMLInputElement>) => {\n    setPlaceInput(e.currentTarget.value);\n  };\n\n  const onEnterDownHander = (e: React.KeyboardEvent<HTMLInputElement>) => {\n    if (e.key === 'Enter') {\n      // 위도, 경도 받아오기\n      axios\n        .get(\n          `https://maps.googleapis.com/maps/api/geocode/json?address=${placeInput}&key=${apiKey}`\n        )\n        .then((res) => {\n          console.log(res);\n          const { lat, lng } = res.data.results[0].geometry.location;\n          return { lat, lng };\n        })\n        .then(({ lat, lng }) => {\n          console.log(lat, lng);\n\n          // @ts-ignore beta feature not in type declarations\n          const localContextMapView = new google.maps.localContext.LocalContextMapView(\n            {\n              element: document.getElementById('map'),\n              placeTypePreferences: ['restaurant', 'tourist_attraction'],\n              maxPlaceCount: 12,\n            }\n          );\n\n          map = localContextMapView.map;\n\n          map.setOptions({\n            center: { lat: 51.507307, lng: -0.08114 },\n            zoom: 14,\n          });\n\n          // function initMap() {\n          // const searchPlace = new google.maps.LatLng(lat, lng);\n          // const inforWindow = new google.maps.InfoWindow();\n          // const map = new google.maps.Map(\n          //   document.getElementById('map') as HTMLElement,\n          //   {\n          //     center: searchPlace,\n          //     zoom: 15,\n          //   }\n          // );\n\n          // console.log('map', map);\n          // const request = {\n          //   location: searchPlace,\n          //   type: ['restaurant'],\n          // };\n\n          // const service = new google.maps.places.PlacesService(map);\n          // console.log(service.prototype);\n          // service.nearbySearch(request, function (results: any, status: any) {\n          //   console.log(results);\n          // });\n          // }\n          // initMap();\n        });\n      // history.push('/main', placeInput);\n    }\n  };\n\n  const signInModalHandler = (e: React.MouseEvent<HTMLElement>) => {\n    const target = e.currentTarget.textContent;\n    if (target === 'Log in') {\n      setIsSignUpOpen(!isSignUpOpen);\n      setIsSignInOpen(!isSignInOpen);\n    } else {\n      setIsSignInOpen(!isSignInOpen);\n    }\n  };\n\n  const signUpModalHandler = (e: React.MouseEvent<HTMLElement>) => {\n    const target = e.currentTarget.textContent;\n    if (target === '+') {\n      setIsSignUpOpen(!isSignUpOpen);\n    } else if (target === 'Sign up') {\n      setIsSignUpOpen(!isSignUpOpen);\n      setIsSignInOpen(!isSignInOpen);\n    }\n  };\n\n  return (\n    <div className=\"home\">\n      <div id=\"map\"></div>\n      <video className=\"home_video\" autoPlay loop muted>\n        <source src={backgroundVideo} type=\"video/mp4\" />\n      </video>\n\n      <div className=\"home_contents\">\n        <div className=\"home_contents_header-bar\">\n          <div className=\"home_contents_header-bar_home_music\">\n            <BGMusic />\n          </div>\n          <div\n            className=\"home_contents_header-bar_home_signin\"\n            onClick={signInModalHandler}\n          >\n            Sign-In\n          </div>\n        </div>\n\n        <div className=\"home_contents_incoming-texts\">\n          <div className=\"home_contents_incoming-text_title\">YouRang</div>\n          <div className=\"home_contents_incoming-text_question\">\n            대한민국 어디로 떠나고 싶으세요?\n          </div>\n          <div className=\"home_contents_incoming-text_input-family\">\n            <input\n              type=\"text\"\n              placeholder=\"장소\"\n              className=\"home_contents_incoming-text_input\"\n              maxLength={20}\n              onChange={onChangeHandler}\n              onKeyDown={onEnterDownHander}\n            />\n            <label\n              htmlFor=\"place\"\n              className=\"home_contents_incoming-text_input_label\"\n            >\n              장소\n            </label>\n          </div>\n        </div>\n        {isSignInOpen ? (\n          <SignInModal\n            signInModalHandler={signInModalHandler}\n            signUpModalHandler={signUpModalHandler}\n          />\n        ) : null}\n\n        {isSignUpOpen ? (\n          <SignUpModal\n            signInModalHandler={signInModalHandler}\n            signUpModalHandler={signUpModalHandler}\n          />\n        ) : null}\n      </div>\n    </div>\n  );\n}\n\nexport default Home;\n","/Users/hoon/Desktop/yourang_client/src/container/Mypage.tsx",["86","87","88","89","90"],"import React, { useState, useRef } from \"react\";\nimport \"./Mypage.css\";\nimport Photo from \"../image/photo.png\";\nimport PlanList from \"../components/PlanList\";\nimport EditInfo from \"../components/EditInfo\";\nimport Navigation from \"./Navigation\";\n\nfunction Mypage() {\n  const [userinfo, setUserinfo] = useState({\n    name: \"이종원\",\n    userid: \"per1215\",\n    email: \"syd1215no@gmail.com\",\n    phone: \"010-6418-7794\",\n    created: \"20.11.12\",\n  });\n\n  const [planList, setPlanList] = useState([\n    {\n      id: 0,\n      planName: \"부산 여행\",\n      inst: \"부산은 역시 돼지국밥\",\n      created: \"20.11.12\",\n    },\n    {\n      id: 1,\n      planName: \"서울 여행\",\n      inst: \"서울은 역시 강남\",\n      created: \"20.11.12\",\n    },\n    {\n      id: 2,\n      planName: \"강원도 여행\",\n      inst: \"서울은 역시 감자\",\n      created: \"20.11.12\",\n    },\n    {\n      id: 3,\n      planName: \"제주도 여행\",\n      inst: \"제주도은 역시 한라봉\",\n      created: \"20.11.12\",\n    },\n    {\n      id: 4,\n      planName: \"경주\",\n      inst: \"경주은 역시 불국사\",\n      created: \"20.11.12\",\n    },\n    {\n      id: 5,\n      planName: \"전주\",\n      inst: \"전주은 역시 비빔밥\",\n      created: \"20.11.12\",\n    },\n    {\n      id: 6,\n      planName: \"전주\",\n      inst: \"전주은 역시 비빔밥\",\n      created: \"20.11.12\",\n    },\n    {\n      id: 7,\n      planName: \"전주\",\n      inst: \"전주은 역시 비빔밥\",\n      created: \"20.11.12\",\n    },\n    {\n      id: 8,\n      planName: \"전주\",\n      inst: \"전주은 역시 비빔밥\",\n      created: \"20.11.12\",\n    },\n    {\n      id: 9,\n      planName: \"전주\",\n      inst: \"전주은 역시 비빔밥\",\n      created: \"20.11.12\",\n    },\n    {\n      id: 10,\n      planName: \"전주\",\n      inst: \"전주은 역시 비빔밥\",\n      created: \"20.11.12\",\n    },\n    {\n      id: 11,\n      planName: \"전주\",\n      inst: \"전주은 역시 비빔밥\",\n      created: \"20.11.12\",\n    },\n    {\n      id: 12,\n      planName: \"전주\",\n      inst: \"전주은 역시 비빔밥\",\n      created: \"20.11.12\",\n    },\n    {\n      id: 13,\n      planName: \"전주\",\n      inst: \"전주은 역시 비빔밥\",\n      created: \"20.11.12\",\n    },\n    {\n      id: 14,\n      planName: \"전주\",\n      inst: \"전주은 역시 비빔밥\",\n      created: \"20.11.12\",\n    },\n    {\n      id: 15,\n      planName: \"전주\",\n      inst: \"전주은 역시 비빔밥\",\n      created: \"20.11.12\",\n    },\n    {\n      id: 16,\n      planName: \"전주\",\n      inst: \"전주은 역시 비빔밥\",\n      created: \"20.11.12\",\n    },\n  ]);\n\n  const [search, setSearch] = useState(\"\");\n  const [onModal, setOnModal] = useState(false);\n\n  const { name, userid, email, phone } = userinfo;\n\n  const onRemove = (id: number): void => {\n    setPlanList(planList.filter((el) => el.id !== id));\n  };\n\n  const onChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setSearch(e.target.value);\n    // console.log(e.target)\n  };\n\n  const editOnModal = (e: any) => {\n    setOnModal(!onModal);\n  };\n\n  return (\n    <div className=\"mypage\">\n      {onModal && <EditInfo editOnModal={editOnModal} userinfo={userinfo} />}\n      <div className=\"mypage_top\">\n        <div className=\"mypage_top_left\">\n          <div className=\"mypage_top_left_proflie\">\n            <img\n              width=\"150px\"\n              className=\"mypage_top_left_proflie_photo\"\n              src={Photo}\n              alt=\"\"\n            />\n            <span className=\"mypage_top_left_proflie_name\">{name}</span>\n            <button\n              className=\"mypage_top_left_proflie_edit\"\n              onClick={editOnModal}\n            >\n              EDIT\n            </button>\n          </div>\n          <div className=\"mypage_top_left_info\">\n            <div className=\"mypage_top_left_info_title\">User info</div>\n            <div className=\"mypage_top_left_info_detail\">\n              <div className=\"mypage_top_left_info_detail_useridemail\">\n                <div className=\"mypage_top_left_info_detail_userid\">\n                  <div className=\"mypage_top_left_info_detail_userid_title\">\n                    UserId\n                  </div>\n                  <div className=\"mypage_top_left_info_detail_userid_value\">\n                    {userid}\n                  </div>\n                </div>\n                <div className=\"mypage_top_left_info_detail_email\">\n                  <div className=\"mypage_top_left_info_detail_email_title\">\n                    Email\n                  </div>\n                  <div className=\"mypage_top_left_info_detail_email_value\">\n                    {email}\n                  </div>\n                </div>\n              </div>\n              <div className=\"mypage_top_left_info_detail_phoneplan\">\n                <div className=\"mypage_top_left_info_detail_phone\">\n                  <div className=\"mypage_top_left_info_detail_phone_title\">\n                    Phone\n                  </div>\n                  <div className=\"mypage_top_left_info_detail_phone_value\">\n                    {phone}\n                  </div>\n                </div>\n                <div className=\"mypage_top_left_info_detail_plans\">\n                  <div className=\"mypage_top_left_info_detail_plans_title\">\n                    Plans\n                  </div>\n                  <div className=\"mypage_top_left_info_detail_plans_value\">\n                    {planList.length}\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div className=\"empty\">\n          <div className=\"mypage_bottom_cover\">\n            <div className=\"mypage_editbar\">\n              <button className=\"mypage_editbar_add\">Add</button>\n            </div>\n            <div className=\"mypage_planlist\">\n              <div className=\"mypage_planlist_form\">\n                {planList.map((el) => (\n                  <PlanList key={el.id} user={el} onRemove={onRemove} />\n                ))}\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      {/* <div className=\"mypage_bottom\">\n        <div className=\"mypage_bottom_cover\">\n          <div className=\"mypage_editbar\">\n            <button className=\"mypage_editbar_add\">추가</button>\n          </div>\n          <div className=\"mypage_planlist\">\n            <div className=\"mypage_planlist_form\">\n              {planList.map((el) => (\n                <PlanList key={el.id} user={el} onRemove={onRemove} />\n              ))}\n            </div>\n          </div>\n        </div>\n      </div> */}\n    </div>\n  );\n}\n\nexport default Mypage;\n","/Users/hoon/Desktop/yourang_client/src/container/Navigation.tsx",["91","92"],"import React, { ChangeEvent, FormEvent, useEffect, useState } from 'react';\nimport './Navigation.scss';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\n\nconst apiKey = process.env.REACT_APP_GOOGLE_MAP_API;\n\ninterface NavigationProps {\n  submit: (form: { data: string; foo: string }) => void;\n}\nfunction Navigation({ submit }: NavigationProps) {\n  const [value, setValue] = useState({\n    data: '',\n    foo: '',\n  });\n\n  const onChange = (e: ChangeEvent<HTMLInputElement>) => {\n    setValue({\n      ...value,\n      data: e.target.value,\n    });\n  };\n\n  const handleSubmit = (e: FormEvent<HTMLFormElement>) => {\n    let data;\n    e.preventDefault();\n    submit(value);\n    async function foo() {\n      data = axios\n\n        .get(\n          `https://maps.googleapis.com/maps/api/place/findplacefromtext/json?input=Museum%20of%20Contemporary%20Art%20Australia&inputtype=textquery&fields=photos,formatted_address,name,rating,opening_hours,geometry&key=${apiKey}`\n          // `https://maps.googleapis.com/maps/api/geocode/json?address=${value.data}&key=${apiKey}`\n        )\n        .then(console.log);\n    }\n    foo();\n  };\n\n  return (\n    <header>\n      <div id=\"logo\">\n        <Link to=\"/main\">youRang</Link>\n      </div>\n      <div id=\"navSearch\">\n        <form onSubmit={handleSubmit}>\n          <input\n            onChange={onChange}\n            value={value.data}\n            type=\"text\"\n            placeholder=\"지역, 숙소명을 입력하세요\"\n            autoComplete=\"off\"\n          />\n        </form>\n      </div>\n      <div id=\"navMenus\">\n        <div id=\"navProfile\">\n          <Link to=\"/main\">Home</Link>\n        </div>\n        <div id=\"navProfile\">Help</div>\n        <div id=\"navProfile\">\n          <Link to=\"/main/profile\">Profile</Link>\n        </div>\n      </div>\n    </header>\n  );\n}\n\nexport default Navigation;\n","/Users/hoon/Desktop/yourang_client/src/container/Main.tsx",["93","94","95","96"],"import React, { useEffect, useState } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport './Main.scss';\nimport classNames from 'classnames';\nimport ContentsBox from '../components/ContentsBox';\nimport Modal from '../components/Modal';\nimport { servicesVersion } from 'typescript';\n\ndeclare const google: any;\n\ninterface menuState {\n  restaurant: boolean;\n  place: boolean;\n  hotel: boolean;\n}\n\nfunction Main() {\n  const [menuState, setMenuState] = useState<menuState>({\n    restaurant: false,\n    place: true,\n    hotel: false,\n  });\n\n  const [modalState, setModalState] = useState({\n    isOn: false,\n  });\n\n  // let map;\n  // useEffect(() => {\n  //   map = new google.map.Map(document.getElementById('map'), {\n  //     center: { lat: -34.397, lng: 150.644 },\n  //     zoom: 8,\n  //   });\n  // });\n\n  // leftContainer MenuTap State\n  const onClick = (e: string) => {\n    setMenuState({\n      ...menuState,\n      restaurant: false,\n      place: false,\n      hotel: false,\n      [e]: true,\n    });\n  };\n\n  // 컨텐츠 상세 모달 on\n  const onModalState = () => {\n    setModalState({\n      ...modalState,\n      isOn: true,\n    });\n  };\n\n  // 컨텐츠 상세 모달 off\n  const closeModalState = () => {\n    setModalState({\n      ...modalState,\n      isOn: false,\n    });\n  };\n\n  return (\n    <div id=\"mainContainer\">\n      <div id=\"leftContainer\">\n        <ul id=\"leftMenu\">\n          <li\n            onClick={() => onClick('restaurant')}\n            value=\"restaurant\"\n            className={classNames({ restaurant: menuState.restaurant })}\n          >\n            맛집\n          </li>\n          <li\n            onClick={() => onClick('place')}\n            value=\"place\"\n            className={classNames({ place: menuState.place })}\n          >\n            명소\n          </li>\n          <li\n            onClick={() => onClick('hotel')}\n            value=\"hotel\"\n            className={classNames({ hotel: menuState.hotel })}\n          >\n            숙박\n          </li>\n        </ul>\n        <div id=\"leftContents\">\n          {menuState.place\n            ? src.map((content) => (\n                <ContentsBox\n                  key={content.id}\n                  imgSrc={content.imgSrc}\n                  title={content.title}\n                  onModalState={onModalState}\n                />\n              ))\n            : ''}\n        </div>\n      </div>\n      <div id=\"rightContainer\">\n        {modalState.isOn ? <Modal closeModalState={closeModalState} /> : ''}\n        <div\n          id=\"map\"\n          style={{ height: '100%' }}\n          className={classNames({ onShow: modalState.isOn })}\n        ></div>\n      </div>\n    </div>\n  );\n}\n\nexport default Main;\n\nconst src = [\n  {\n    id: 1,\n    imgSrc:\n      'https://images.unsplash.com/photo-1508672019048-805c876b67e2?ixid=MXwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHw%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=1993&q=80',\n    title: 'Please Travel',\n  },\n  {\n    id: 2,\n    imgSrc:\n      'https://images.unsplash.com/photo-1508672019048-805c876b67e2?ixid=MXwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHw%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=1993&q=80',\n    title: 'Please Travel',\n  },\n  {\n    id: 3,\n    imgSrc:\n      'https://images.unsplash.com/photo-1508672019048-805c876b67e2?ixid=MXwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHw%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=1993&q=80',\n    title: 'Please Travel',\n  },\n  {\n    id: 4,\n    imgSrc:\n      'https://images.unsplash.com/photo-1508672019048-805c876b67e2?ixid=MXwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHw%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=1993&q=80',\n    title: 'Please Travel',\n  },\n  {\n    id: 5,\n    imgSrc:\n      'https://images.unsplash.com/photo-1508672019048-805c876b67e2?ixid=MXwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHw%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=1993&q=80',\n    title: 'Please Travel',\n  },\n  {\n    id: 6,\n    imgSrc:\n      'https://images.unsplash.com/photo-1508672019048-805c876b67e2?ixid=MXwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHw%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=1993&q=80',\n    title: 'Please Travel',\n  },\n];\n","/Users/hoon/Desktop/yourang_client/src/components/BGMusic.tsx",["97"],"import React, { useState, useEffect, MouseEvent } from 'react';\nimport './BGMusic.css';\n//music\nimport bgMusic from '../music/yourang-home_music.mp3';\n// image\nimport musicMute from '../image/music-mute.png';\nimport musicPlay from '../image/music-play.png';\n\nfunction BGMusic(url: any) {\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [music] = useState(new Audio(bgMusic));\n\n  useEffect(() => {\n    isPlaying ? music.play() : music.pause();\n  });\n\n  // useEffect(() => {\n  //   setTimeout(() => music.play(), 2000);\n  //   return music.pause();\n  // }, []);\n\n  const toggle = () => {\n    setIsPlaying(!isPlaying);\n  };\n\n  return (\n    <div>\n      {/* <button className=\"home_music-button\" onClick={toggle}>\n        {d}\n      </button> */}\n      <img\n        className=\"music-button\"\n        onClick={toggle}\n        src={isPlaying ? musicPlay : musicMute}\n        alt=\"\"\n      />\n    </div>\n  );\n}\n\nexport default BGMusic;\n","/Users/hoon/Desktop/yourang_client/src/components/SignUpModal.tsx",["98","99","100","101"],"import React, { useState } from \"react\";\nimport axios from \"axios\";\n\n//style\nimport \"./SignUpModal.css\";\nimport googleIcon from \"../image/google_icon.png\";\nimport naverIcon from \"../image/naver_icon.png\";\n\n//components\nimport ErrorMessage from \"./ErrorMessage\";\n\ninterface SignUpModalProps {\n  signInModalHandler: (e: React.MouseEvent<HTMLElement>) => void;\n  signUpModalHandler: (e: React.MouseEvent<HTMLElement>) => void;\n}\n\nfunction SignUpModal({\n  signInModalHandler,\n  signUpModalHandler,\n}: SignUpModalProps) {\n  const [signUpInfo, setSignUpInfo] = useState({\n    userId: \"\",\n    email: \"\",\n    mobile: \"\",\n    password: \"\",\n    confirmPassword: \"\",\n  });\n  const [isValidFail, setIsValidFail] = useState(false);\n  const [errorMessage, setErrorMessage] = useState(\"\");\n\n  const signUpInfoHandler = (e: React.ChangeEvent<HTMLInputElement>) => {\n    // input창에 입력한 내용 state로 저장하는 로직\n    const { name, value } = e.currentTarget;\n    setSignUpInfo({ ...signUpInfo, [name]: value });\n  };\n\n  const mobileInputHander = (e: React.KeyboardEvent<HTMLInputElement>) => {\n    // mobile전용 유효성 검사 및 입력제한 로직(출력 예시: 000-0000-0000 숫자로만 입력됨. \"-\"는 자동입력 됨)\n    const { name, value, maxLength } = e.currentTarget;\n    let reg = new RegExp(\"^[0-9]\");\n    if (reg.test(e.key)) {\n      if (value.length === 3 || value.length === 8) {\n        setSignUpInfo({ ...signUpInfo, [name]: value + \"-\" + e.key });\n      } else {\n        setSignUpInfo({\n          ...signUpInfo,\n          [name]: value.slice(0, maxLength) + e.key,\n        });\n      }\n    }\n\n    if (e.key === \"Backspace\" && value.length === 9) {\n      setSignUpInfo({ ...signUpInfo, [name]: value.substring(0, 8) });\n    } else if (e.key === \"Backspace\" && value.length === 4) {\n      setSignUpInfo({ ...signUpInfo, [name]: value.substring(0, 3) });\n    } else if (e.key === \"Backspace\") {\n      setSignUpInfo({\n        ...signUpInfo,\n        [name]: value.substring(0, value.length - 1),\n      });\n    }\n  };\n\n  const validationCheck = (e: React.MouseEvent<HTMLElement>) => {\n    // Sign-up버튼을 눌렀을 때, signUpInfo를 바탕으로 진행하는 유효성 검사.\n    const { userId, email, mobile, password, confirmPassword } = signUpInfo;\n\n    const error1 = \"입력정보를 모두 입력해 주셔야 합니다.\";\n    const error2 = \"아이디 혹은 비밀번가 맞지않습니다. 다시 입력해 주세요.\";\n    const error3 = \"비밀번호가 서로 일치하지 않습니다. 다시 입력해 주세요.\";\n\n    if (password !== confirmPassword) {\n      setIsValidFail(!isValidFail);\n      setErrorMessage(error3);\n    }\n\n    if (!userId || !email || !mobile || !password || !confirmPassword) {\n      setIsValidFail(!isValidFail);\n      setErrorMessage(error1);\n    }\n\n    //유효성 검사에 문제가 없고, 모든 정보가 입력이 됐을 때, 서버에 사인업 요청하는 로직을 보내야 함.\n  };\n\n  // 아이디 중복체크 함수 만들어야 함\n  // 이메일 중복체크 함수 만들어야 함\n\n  return (\n    <div className=\"signup-modal\">\n      <div className=\"signup-modal_container\">\n        <div className=\"signup-modal_container_content\">\n          <div className=\"signup-modal_container_content_head\">\n            <div\n              className=\"signup-modal_container_content_head_close-button\"\n              onClick={signUpModalHandler}\n            >\n              +\n            </div>\n            <div className=\"signup-modal_container_content_head_title\">\n              Sign up\n            </div>\n            <div className=\"empty-div-for-spacing\"></div>\n          </div>\n\n          <div className=\"signup-modal_container_content_body\">\n            <div className=\"signup-modal_container_content_body_upper\">\n              <div className=\"signup-modal_container_content_body__upper_input-field\">\n                <div className=\"signup-modal_container_content_body__upper_input-field_id-group\">\n                  <input\n                    type=\"text\"\n                    name=\"userId\"\n                    className=\"signup-modal_container_content_body__upper_input-field_id\"\n                    placeholder=\"User ID\"\n                    onChange={signUpInfoHandler}\n                  />\n                  <button className=\"signup-modal_container_content_body__upper_input-field_id_confirm\">\n                    중복체크\n                  </button>\n                </div>\n\n                <div className=\"signup-modal_container_content_body__upper_input-field_email-group\">\n                  <input\n                    type=\"email\"\n                    name=\"email\"\n                    className=\"signup-modal_container_content_body__upper_input-field_email\"\n                    placeholder=\"Email\"\n                    onChange={signUpInfoHandler}\n                  />\n                  <button className=\"signup-modal_container_content_body__upper_input-field_email_confirm\">\n                    중복체크\n                  </button>\n                </div>\n\n                <input\n                  type=\"tel\"\n                  name=\"mobile\"\n                  className=\"signup-modal_container_content_body__upper_input-field_mobile\"\n                  placeholder=\"Mobile\"\n                  value={signUpInfo.mobile}\n                  // onChange={signUpInfoHandler}\n                  onKeyDown={mobileInputHander}\n                  maxLength={12}\n                />\n\n                <input\n                  type=\"password\"\n                  name=\"password\"\n                  className=\"signup-modal_container_content_body__upper_input-field_password\"\n                  placeholder=\"Password\"\n                  onChange={signUpInfoHandler}\n                />\n                <input\n                  type=\"password\"\n                  name=\"confirmPassword\"\n                  className=\"signup-modal_container_content_body__upper_input-field_password-confirm\"\n                  placeholder=\"Confirm password\"\n                  onChange={signUpInfoHandler}\n                />\n              </div>\n              <button\n                className=\"signup-modal_container_content_body__upper_login-button\"\n                onClick={validationCheck}\n              >\n                Sign up\n              </button>\n            </div>\n\n            <div className=\"signup-modal_container_content_body_lower\">\n              <div className=\"signup-modal_container_content_body_lower_google-login\">\n                <img\n                  src={googleIcon}\n                  className=\"signup-modal_container_content_body_lower_google-login_icon\"\n                />\n                <div className=\"signup-modal_container_content_body_lower_google-login_message\">\n                  Continue with Google\n                </div>\n              </div>\n              <div className=\"signup-modal_container_content_body_lower_naver-login\">\n                <img\n                  src={naverIcon}\n                  className=\"signup-modal_container_content_body_lower_naver-login_icon\"\n                />\n                <div className=\"signup-modal_container_content_body_lower_naver-login_message\">\n                  Continue with Naver\n                </div>\n              </div>\n\n              <div className=\"signup-modal_container_content_body_lower_to-login-group\">\n                <div className=\"signup-modal_container_content_body_lower_ask-for-login\">\n                  이미 회원이시라구요?\n                </div>\n                <button\n                  name=\"toSignIn\"\n                  type=\"button\"\n                  value=\"signin\"\n                  onClick={signInModalHandler}\n                  className=\"signup-modal_container_content_body_lower_to-login\"\n                >\n                  Log in\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      {isValidFail ? (\n        <ErrorMessage\n          validationCheck={validationCheck}\n          errorMessage={errorMessage}\n        />\n      ) : null}\n    </div>\n  );\n}\n\nexport default SignUpModal;\n","/Users/hoon/Desktop/yourang_client/src/components/SignInModal.tsx",["102","103","104"],"import React, { useState } from 'react';\nimport './SignInModal.css';\nimport googleIcon from '../image/google_icon.png';\nimport naverIcon from '../image/naver_icon.png';\nimport ErrorMessage from './ErrorMessage';\n\ninterface SignInModalProps {\n  signInModalHandler: (e: React.MouseEvent<HTMLElement>) => void;\n  signUpModalHandler: (e: React.MouseEvent<HTMLElement>) => void;\n}\n\nfunction SignInModal({\n  signInModalHandler,\n  signUpModalHandler,\n}: SignInModalProps) {\n  const [loginInfo, setLoginInfo] = useState({ userId: '', password: '' });\n  const [isValidFail, setIsValidFail] = useState(false);\n  const [errorMessage, setErrorMessage] = useState('');\n\n  const loginInfoHandler = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const { name, value } = e.currentTarget;\n    setLoginInfo({ ...loginInfo, [name]: value });\n  };\n\n  const validationCheck = (e: React.MouseEvent<HTMLElement>) => {\n    // 유효성 검사 후 user가 확인 버튼을 눌렀을 때, LoginInfo를 초기화 하기 위한 로직\n    if (e.currentTarget.textContent === '확인') {\n      setLoginInfo({ userId: '', password: '' });\n    }\n\n    const error1 = '아아디와 비밀번호를 모두 입력해 주셔야 합니다.';\n    const error2 = '아이디 혹은 비밀번가 맞지않습니다. 다시 입력해 주세요.';\n    const { userId, password } = loginInfo;\n\n    if (!userId || !password) {\n      setIsValidFail(!isValidFail);\n      setErrorMessage(error1);\n    }\n  };\n\n  return (\n    <div className=\"signin-modal\">\n      <div className=\"signin-modal_container\">\n        <div className=\"signin-modal_container_content\">\n          <div className=\"signin-modal_container_content_head\">\n            <div\n              className=\"signin-modal_container_content_head_close-button\"\n              onClick={signInModalHandler}\n            >\n              +\n            </div>\n            <div className=\"signin-modal_container_content_head_title\">\n              Log in\n            </div>\n            <div className=\"empty-div-for-spacing\"></div>\n          </div>\n\n          <div className=\"signin-modal_container_content_body\">\n            <div className=\"signin-modal_container_content_body_upper\">\n              <div className=\"signin-modal_container_content_body__upper_input-field\">\n                <input\n                  type=\"text\"\n                  name=\"userId\"\n                  className=\"signin-modal_container_content_body__upper_input-field_id\"\n                  placeholder=\"User ID\"\n                  onChange={loginInfoHandler}\n                />\n                <input\n                  type=\"password\"\n                  name=\"password\"\n                  className=\"signin-modal_container_content_body__upper_input-field_password\"\n                  placeholder=\"Password\"\n                  onChange={loginInfoHandler}\n                />\n              </div>\n              <button\n                className=\"signin-modal_container_content_body__upper_login-button\"\n                onClick={validationCheck}\n              >\n                Log In\n              </button>\n            </div>\n\n            <div className=\"signin-modal_container_content_body_lower\">\n              <div className=\"signin-modal_container_content_body_lower_google-login\">\n                <img\n                  src={googleIcon}\n                  className=\"signin-modal_container_content_body_lower_google-login_icon\"\n                />\n                <div className=\"signin-modal_container_content_body_lower_google-login_message\">\n                  Continue with Google\n                </div>\n              </div>\n              <div className=\"signin-modal_container_content_body_lower_naver-login\">\n                <img\n                  src={naverIcon}\n                  className=\"signin-modal_container_content_body_lower_naver-login_icon\"\n                />\n                <div className=\"signin-modal_container_content_body_lower_naver-login_message\">\n                  Continue with Naver\n                </div>\n              </div>\n\n              <div className=\"signin-modal_container_content_body_lower_to-signup-group\">\n                <div className=\"signin-modal_container_content_body_lower_ask-for-signup\">\n                  아직 회원이 아니세요?\n                </div>\n                <button\n                  name=\"toSignUp\"\n                  type=\"button\"\n                  value=\"signup\"\n                  onClick={signUpModalHandler}\n                  className=\"signin-modal_container_content_body_lower_to-signup\"\n                >\n                  Sign up\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      {isValidFail ? (\n        <ErrorMessage\n          validationCheck={validationCheck}\n          errorMessage={errorMessage}\n        />\n      ) : null}\n    </div>\n  );\n}\n\nexport default SignInModal;\n","/Users/hoon/Desktop/yourang_client/src/components/PlanList.tsx",[],"/Users/hoon/Desktop/yourang_client/src/components/EditInfo.tsx",["105","106"],"import React, { useState, useEffect } from \"react\";\nimport \"./EditInfo.css\";\n\ntype EditInfoProp = {\n  editOnModal: (e: any) => void;\n  userinfo: {\n    name: string;\n    userid: string;\n    email: string;\n    phone: string;\n    created: string;\n  };\n};\n\nfunction EditInfo({ editOnModal, userinfo }: EditInfoProp) {\n  const [inputForm, setInputForm] = useState({\n    editEmail: \"\",\n    password: \"\",\n    inspect: \"\",\n    editPhone: \"\",\n  });\n\n  const { editEmail, password, inspect, editPhone } = inputForm;\n  const { email, phone } = userinfo;\n\n  const onChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const { name, value } = e.target;\n    console.log(e.target);\n    setInputForm({\n      ...inputForm,\n      [name]: value,\n    });\n  };\n\n  const mobileInputHander = (e: React.KeyboardEvent<HTMLInputElement>) => {\n    // mobile전용 유효성 검사 및 입력제한 로직(출력 예시: 000-0000-0000 숫자로만 입력됨. \"-\"는 자동입력 됨)\n    const { name, value, maxLength } = e.currentTarget;\n    let reg = new RegExp(\"^[0-9]\");\n    if (reg.test(e.key)) {\n      if (value.length === 3 || value.length === 8) {\n        setInputForm({ ...inputForm, [name]: value + \"-\" + e.key });\n      } else {\n        setInputForm({\n          ...inputForm,\n          [name]: value.slice(0, maxLength) + e.key,\n        });\n      }\n    }\n\n    if (e.key === \"Backspace\" && value.length === 9) {\n      setInputForm({ ...inputForm, [name]: value.substring(0, 8) });\n    } else if (e.key === \"Backspace\" && value.length === 4) {\n      setInputForm({ ...inputForm, [name]: value.substring(0, 3) });\n    } else if (e.key === \"Backspace\") {\n      setInputForm({\n        ...inputForm,\n        [name]: value.substring(0, value.length - 1),\n      });\n    }\n    console.log(e.key);\n  };\n\n  return (\n    <div className=\"editinfo\">\n      <div className=\"editinfo_modal\">\n        <div className=\"editinfo_modal_name\">youRang</div>\n        <div className=\"editinfo_modal_form\">\n          <div className=\"editinfo_modal_Email\">\n            <div className=\"editinfo_modal_Email_title\">Email</div>\n            <input\n              className=\"editinfo_modal_Email_value\"\n              name=\"editEmail\"\n              onChange={onChange}\n              defaultValue={editEmail ? editEmail : email}\n            />\n          </div>\n          <div className=\"editinfo_modal_phone\">\n            <div className=\"editinfo_modal_phone_title\">Phone</div>\n            <input\n              type=\"text\"\n              className=\"editinfo_modal_phone_value\"\n              name=\"editPhone\"\n              value={editPhone}\n              onKeyDown={mobileInputHander}\n              maxLength={12}\n            />\n          </div>\n          <div className=\"editinfo_modal_password\">\n            <div className=\"editinfo_modal_password_title\">Password</div>\n            <input\n              type=\"password\"\n              className=\"editinfo_modal_password_value1\"\n              name=\"password\"\n              value={password}\n              onChange={onChange}\n            />\n            <input\n              className=\"editinfo_modal_password_value2\"\n              type=\"password\"\n              name=\"inspect\"\n              value={inspect}\n              onChange={onChange}\n            />\n            {password !== inspect ? (\n              <div className=\"editinfo_modal_password_inspect\">\n                작성된 비밀번호가 서로 다릅니다\n              </div>\n            ) : (\n              \"\"\n            )}\n          </div>\n\n          <button className=\"editinfo_modal_btn\" onClick={editOnModal}>\n            작성완료\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default EditInfo;\n","/Users/hoon/Desktop/yourang_client/src/components/ContentsBox.tsx",[],"/Users/hoon/Desktop/yourang_client/src/components/Modal.tsx",[],"/Users/hoon/Desktop/yourang_client/src/components/ErrorMessage.tsx",[],["107","108"],{"ruleId":"109","replacedBy":"110"},{"ruleId":"111","replacedBy":"112"},{"ruleId":"113","severity":1,"message":"114","line":1,"column":17,"nodeType":"115","messageId":"116","endLine":1,"endColumn":25},{"ruleId":"113","severity":1,"message":"117","line":9,"column":8,"nodeType":"115","messageId":"116","endLine":9,"endColumn":18},{"ruleId":"113","severity":1,"message":"118","line":10,"column":8,"nodeType":"115","messageId":"116","endLine":10,"endColumn":12},{"ruleId":"113","severity":1,"message":"119","line":11,"column":8,"nodeType":"115","messageId":"116","endLine":11,"endColumn":14},{"ruleId":"113","severity":1,"message":"120","line":12,"column":8,"nodeType":"115","messageId":"116","endLine":12,"endColumn":15},{"ruleId":"113","severity":1,"message":"121","line":8,"column":10,"nodeType":"115","messageId":"116","endLine":8,"endColumn":14},{"ruleId":"113","severity":1,"message":"122","line":8,"column":16,"nodeType":"115","messageId":"116","endLine":8,"endColumn":23},{"ruleId":"113","severity":1,"message":"123","line":1,"column":17,"nodeType":"115","messageId":"116","endLine":1,"endColumn":26},{"ruleId":"113","severity":1,"message":"124","line":11,"column":10,"nodeType":"115","messageId":"116","endLine":11,"endColumn":21},{"ruleId":"113","severity":1,"message":"125","line":21,"column":9,"nodeType":"115","messageId":"116","endLine":21,"endColumn":16},{"ruleId":"113","severity":1,"message":"126","line":1,"column":27,"nodeType":"115","messageId":"116","endLine":1,"endColumn":33},{"ruleId":"113","severity":1,"message":"117","line":6,"column":8,"nodeType":"115","messageId":"116","endLine":6,"endColumn":18},{"ruleId":"113","severity":1,"message":"127","line":9,"column":20,"nodeType":"115","messageId":"116","endLine":9,"endColumn":31},{"ruleId":"113","severity":1,"message":"128","line":122,"column":10,"nodeType":"115","messageId":"116","endLine":122,"endColumn":16},{"ruleId":"113","severity":1,"message":"129","line":131,"column":9,"nodeType":"115","messageId":"116","endLine":131,"endColumn":17},{"ruleId":"113","severity":1,"message":"130","line":1,"column":41,"nodeType":"115","messageId":"116","endLine":1,"endColumn":50},{"ruleId":"113","severity":1,"message":"121","line":29,"column":7,"nodeType":"115","messageId":"116","endLine":29,"endColumn":11},{"ruleId":"113","severity":1,"message":"130","line":1,"column":17,"nodeType":"115","messageId":"116","endLine":1,"endColumn":26},{"ruleId":"113","severity":1,"message":"131","line":2,"column":10,"nodeType":"115","messageId":"116","endLine":2,"endColumn":21},{"ruleId":"113","severity":1,"message":"132","line":7,"column":10,"nodeType":"115","messageId":"116","endLine":7,"endColumn":25},{"ruleId":"113","severity":1,"message":"133","line":9,"column":15,"nodeType":"115","messageId":"116","endLine":9,"endColumn":26},{"ruleId":"113","severity":1,"message":"134","line":1,"column":38,"nodeType":"115","messageId":"116","endLine":1,"endColumn":48},{"ruleId":"113","severity":1,"message":"135","line":2,"column":8,"nodeType":"115","messageId":"116","endLine":2,"endColumn":13},{"ruleId":"113","severity":1,"message":"136","line":69,"column":11,"nodeType":"115","messageId":"116","endLine":69,"endColumn":17},{"ruleId":"137","severity":1,"message":"138","line":170,"column":17,"nodeType":"139","endLine":173,"endColumn":19},{"ruleId":"137","severity":1,"message":"138","line":179,"column":17,"nodeType":"139","endLine":182,"endColumn":19},{"ruleId":"113","severity":1,"message":"136","line":32,"column":11,"nodeType":"115","messageId":"116","endLine":32,"endColumn":17},{"ruleId":"137","severity":1,"message":"138","line":86,"column":17,"nodeType":"139","endLine":89,"endColumn":19},{"ruleId":"137","severity":1,"message":"138","line":95,"column":17,"nodeType":"139","endLine":98,"endColumn":19},{"ruleId":"113","severity":1,"message":"130","line":1,"column":27,"nodeType":"115","messageId":"116","endLine":1,"endColumn":36},{"ruleId":"113","severity":1,"message":"140","line":24,"column":18,"nodeType":"115","messageId":"116","endLine":24,"endColumn":23},{"ruleId":"109","replacedBy":"141"},{"ruleId":"111","replacedBy":"142"},"no-native-reassign",["143"],"no-negated-in-lhs",["144"],"@typescript-eslint/no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'Navigation' is defined but never used.","'Main' is defined but never used.","'Mypage' is defined but never used.","'NoMatch' is defined but never used.","'data' is assigned a value but never used.","'setData' is assigned a value but never used.","'ReactNode' is defined but never used.","'findDOMNode' is defined but never used.","'history' is assigned a value but never used.","'useRef' is defined but never used.","'setUserinfo' is assigned a value but never used.","'search' is assigned a value but never used.","'onChange' is assigned a value but never used.","'useEffect' is defined but never used.","'useLocation' is defined but never used.","'servicesVersion' is defined but never used.","'google' is defined but never used.","'MouseEvent' is defined but never used.","'axios' is defined but never used.","'error2' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'phone' is assigned a value but never used.",["143"],["144"],"no-global-assign","no-unsafe-negation"]